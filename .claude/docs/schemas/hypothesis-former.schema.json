{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "hypothesis-former.schema.json",
  "version": "1.0.0",
  "title": "Hypothesis Former Schema",
  "description": "Input/output schema for hypothesis generation and DCS-based ranking (DECIDE phase of OODA loop)",
  "type": "object",
  "properties": {
    "input": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string",
          "description": "Unique identifier for the hypothesis formation task"
        },
        "intent_analysis": {
          "type": "object",
          "description": "Output from intent-analyzer agent (OBSERVE phase)",
          "properties": {
            "intents_identified": {
              "type": "array",
              "items": { "type": "object" },
              "description": "User intents from OBSERVE phase"
            },
            "task_graph": {
              "type": "object",
              "description": "Task dependency graph from intent analysis"
            },
            "implicit_requirements": {
              "type": "array",
              "items": { "type": "object" },
              "description": "Inferred requirements from OBSERVE phase"
            }
          },
          "required": ["intents_identified", "task_graph"]
        },
        "context_assessment": {
          "type": "object",
          "description": "Output from context-readiness-assessor agent (ORIENT phase)",
          "properties": {
            "context_quality": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Overall context quality score from ORIENT phase"
            },
            "information_gaps": {
              "type": "array",
              "items": { "type": "object" },
              "description": "Identified gaps in available information"
            },
            "research_findings": {
              "type": "array",
              "items": { "type": "object" },
              "description": "Synthesized research results from coordinated agents"
            }
          },
          "required": ["context_quality"]
        },
        "constraints": {
          "type": "object",
          "properties": {
            "time_budget": {
              "type": "number",
              "description": "Time budget in minutes (if specified)"
            },
            "token_budget": {
              "type": "number",
              "description": "Maximum token budget for approach (if specified)"
            },
            "required_agents": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Agents that must be included in solution"
            },
            "excluded_agents": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Agents that cannot be used"
            },
            "max_parallel_agents": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10,
              "description": "Maximum agents allowed in parallel (default: 5)"
            }
          },
          "description": "Optional constraints on solution approaches"
        },
        "execution_timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 UTC timestamp from orchestrator (mandatory)"
        }
      },
      "required": ["task_id", "intent_analysis", "context_assessment", "execution_timestamp"],
      "additionalProperties": false
    },
    "output": {
      "type": "object",
      "oneOf": [
        {
          "title": "Hypothesis Formation Success",
          "properties": {
            "status": { "const": "SUCCESS" },
            "agent": { "const": "hypothesis-former" },
            "task_id": { "type": "string" },
            "operation_type": { "const": "generate_hypotheses" },
            "summary": {
              "type": "string",
              "description": "1-3 sentence summary of hypothesis generation and top-ranked approach"
            },
            "confidence": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Confidence level in hypothesis quality and ranking"
            },
            "execution_timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 UTC timestamp from orchestrator"
            },
            "agent_specific_output": {
              "type": "object",
              "properties": {
                "hypotheses_generated": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hypothesis_id": {
                        "type": "string",
                        "description": "Unique identifier for this hypothesis (e.g., 'H1', 'H2', 'H3')"
                      },
                      "name": {
                        "type": "string",
                        "description": "Short descriptive name for this approach"
                      },
                      "description": {
                        "type": "string",
                        "description": "Clear description of the solution approach"
                      },
                      "execution_plan": {
                        "type": "object",
                        "properties": {
                          "agents_required": {
                            "type": "array",
                            "items": { "type": "string" },
                            "description": "List of agents needed for this approach"
                          },
                          "sequential_steps": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "step_id": { "type": "integer" },
                                "description": { "type": "string" },
                                "agents": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "parallel": { "type": "boolean" }
                              },
                              "required": ["step_id", "description", "agents", "parallel"]
                            },
                            "description": "Step-by-step execution sequence"
                          },
                          "estimated_duration_minutes": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Estimated time to complete this approach"
                          },
                          "estimated_token_usage": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Estimated token consumption for this approach"
                          }
                        },
                        "required": ["agents_required", "sequential_steps", "estimated_duration_minutes"],
                        "description": "Detailed execution plan for this hypothesis"
                      },
                      "dcs_breakdown": {
                        "type": "object",
                        "properties": {
                          "task_complexity": {
                            "type": "object",
                            "properties": {
                              "file_count_score": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Score based on number of files involved (0-1 file: 0.0, 2-4 files: 0.4, 5-9 files: 0.7, 10+ files: 1.0)"
                              },
                              "tool_calls_score": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Score based on tool call complexity (1-3 calls: 0.0, 4-7 calls: 0.3, 8-12 calls: 0.7, 13-20 calls: 0.9, 20+ calls: 1.0)"
                              },
                              "domain_expertise_score": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Score based on domain complexity (general: 0.0, framework-specific: 0.4, specialized algorithms: 0.7, security-critical: 0.9, distributed systems: 1.0)"
                              },
                              "integration_points_score": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Score based on integration complexity (no external: 0.0, 1-2 points: 0.3, 3-5 points: 0.7, 6+ points: 1.0)"
                              },
                              "overall": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Weighted average: (file_count × 0.3) + (tool_calls × 0.2) + (domain_expertise × 0.3) + (integration_points × 0.2)"
                              }
                            },
                            "required": ["file_count_score", "tool_calls_score", "domain_expertise_score", "integration_points_score", "overall"],
                            "description": "Task complexity breakdown (40% weight in DCS)"
                          },
                          "agent_fit": {
                            "type": "object",
                            "properties": {
                              "capability_match": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "How well agent capabilities match task requirements (0.0-0.3: poor, 0.4-0.6: moderate, 0.7-0.9: good, 1.0: perfect)"
                              },
                              "domain_scope_match": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "How well agent domain scope matches task domain (1.0: exact match, 0.6-0.8: overlap, <0.5: mismatch)"
                              },
                              "tool_availability": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Whether agent has all required tools (1.0: all available, 0.5: partial, 0.0: missing critical tools)"
                              },
                              "performance_tier": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Agent performance tier (1.0: opus-4, 0.7: sonnet-4, 0.5: sonnet-3.5, 0.3: haiku)"
                              },
                              "overall": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Weighted average: (capability_match × 0.4) + (domain_scope_match × 0.3) + (tool_availability × 0.2) + (performance_tier × 0.1)"
                              }
                            },
                            "required": ["capability_match", "domain_scope_match", "tool_availability", "performance_tier", "overall"],
                            "description": "Agent fitness breakdown (30% weight in DCS)"
                          },
                          "context_quality": {
                            "type": "object",
                            "properties": {
                              "requirements_clarity": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Clarity of requirements (1.0: all clear, 0.7: mostly clear, 0.5: partial, 0.3: ambiguous, 0.0: no context)"
                              },
                              "dependencies_mapped": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Completeness of dependency mapping (1.0: all mapped, 0.7: most mapped, 0.5: partial, 0.3: minimal, 0.0: none)"
                              },
                              "files_available": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Availability of required files (1.0: all available, 0.7: most available, 0.5: partial, 0.3: minimal, 0.0: none)"
                              },
                              "constraints_defined": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Clarity of constraints (1.0: all defined, 0.7: most defined, 0.5: partial, 0.3: minimal, 0.0: none)"
                              },
                              "overall": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Weighted average: (requirements_clarity × 0.4) + (dependencies_mapped × 0.3) + (files_available × 0.2) + (constraints_defined × 0.1)"
                              }
                            },
                            "required": ["requirements_clarity", "dependencies_mapped", "files_available", "constraints_defined", "overall"],
                            "description": "Context quality breakdown (20% weight in DCS)"
                          },
                          "cost_benefit": {
                            "type": "object",
                            "properties": {
                              "task_criticality": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Criticality of task (1.0: critical path, 0.7: high priority, 0.5: moderate, 0.3: routine, 0.0: trivial)"
                              },
                              "token_cost_multiplier": {
                                "type": "number",
                                "minimum": 1,
                                "maximum": 20,
                                "description": "Estimated token cost multiplier (1x: direct, 4x: single agent, 10x: multi-agent, 15x: parallel)"
                              },
                              "overall": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Cost-benefit score: task_criticality - (token_cost_multiplier / 50)"
                              }
                            },
                            "required": ["task_criticality", "token_cost_multiplier", "overall"],
                            "description": "Cost-benefit analysis (10% weight in DCS)"
                          },
                          "overall_dcs": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1,
                            "description": "Overall Delegation Confidence Score: (task_complexity × 0.4) + (agent_fit × 0.3) + (context_quality × 0.2) + (cost_benefit × 0.1)"
                          },
                          "recommendation": {
                            "enum": ["must_delegate", "should_delegate", "may_delegate", "handle_directly"],
                            "description": "Delegation recommendation based on DCS thresholds (≥0.70: must_delegate, 0.50-0.69: should_delegate, 0.30-0.49: may_delegate, <0.30: handle_directly)"
                          }
                        },
                        "required": ["task_complexity", "agent_fit", "context_quality", "cost_benefit", "overall_dcs", "recommendation"],
                        "description": "Complete DCS breakdown for this hypothesis"
                      },
                      "trade_off_analysis": {
                        "type": "object",
                        "properties": {
                          "pros": {
                            "type": "array",
                            "items": { "type": "string" },
                            "minItems": 1,
                            "description": "Advantages of this approach"
                          },
                          "cons": {
                            "type": "array",
                            "items": { "type": "string" },
                            "minItems": 1,
                            "description": "Disadvantages or limitations of this approach"
                          },
                          "risks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "risk": { "type": "string" },
                                "severity": {
                                  "enum": ["low", "medium", "high", "critical"],
                                  "description": "Risk severity level"
                                },
                                "mitigation": { "type": "string" }
                              },
                              "required": ["risk", "severity", "mitigation"]
                            },
                            "description": "Identified risks and mitigation strategies"
                          },
                          "success_probability": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1,
                            "description": "Estimated probability of successful execution"
                          }
                        },
                        "required": ["pros", "cons", "risks", "success_probability"],
                        "description": "Comprehensive trade-off analysis for decision making"
                      }
                    },
                    "required": ["hypothesis_id", "name", "description", "execution_plan", "dcs_breakdown", "trade_off_analysis"]
                  },
                  "minItems": 3,
                  "maxItems": 5,
                  "description": "List of solution hypotheses (3-5 alternatives)"
                },
                "ranking": {
                  "type": "object",
                  "properties": {
                    "ranked_hypothesis_ids": {
                      "type": "array",
                      "items": { "type": "string" },
                      "minItems": 3,
                      "maxItems": 5,
                      "description": "Hypothesis IDs ordered from best to worst (e.g., ['H2', 'H1', 'H3'])"
                    },
                    "ranking_criteria": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "criterion": {
                            "enum": ["dcs_score", "feasibility", "time_efficiency", "token_efficiency", "risk_level", "success_probability"],
                            "description": "Ranking criterion"
                          },
                          "weight": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1,
                            "description": "Weight of this criterion (all weights sum to 1.0)"
                          }
                        },
                        "required": ["criterion", "weight"]
                      },
                      "description": "Criteria used for ranking with weights"
                    },
                    "rationale": {
                      "type": "string",
                      "description": "Explanation of why top-ranked approach was selected"
                    },
                    "sensitivity_analysis": {
                      "type": "object",
                      "properties": {
                        "stable_ranking": {
                          "type": "boolean",
                          "description": "Whether ranking is stable across minor criteria weight changes"
                        },
                        "close_alternatives": {
                          "type": "array",
                          "items": { "type": "string" },
                          "description": "Hypothesis IDs that are close in score to top-ranked"
                        }
                      },
                      "required": ["stable_ranking"],
                      "description": "Sensitivity of ranking to criteria weight changes"
                    }
                  },
                  "required": ["ranked_hypothesis_ids", "ranking_criteria", "rationale", "sensitivity_analysis"],
                  "description": "Ranked list of hypotheses with rationale"
                },
                "recommended_approach": {
                  "type": "object",
                  "properties": {
                    "hypothesis_id": {
                      "type": "string",
                      "description": "ID of top-ranked hypothesis"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of recommended approach"
                    },
                    "confidence": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 1,
                      "description": "Confidence in this recommendation"
                    },
                    "dcs_score": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 1,
                      "description": "DCS score of recommended approach"
                    },
                    "delegation_strategy": {
                      "enum": ["direct_handling", "single_agent", "sequential_pipeline", "parallel_workers", "hybrid_approach"],
                      "description": "Recommended delegation strategy"
                    },
                    "next_steps": {
                      "type": "array",
                      "items": { "type": "string" },
                      "minItems": 1,
                      "description": "Immediate next steps to execute this approach"
                    },
                    "contingency_plan": {
                      "type": "string",
                      "description": "Fallback approach if recommended approach fails (reference to alternative hypothesis_id or strategy)"
                    }
                  },
                  "required": ["hypothesis_id", "name", "confidence", "dcs_score", "delegation_strategy", "next_steps", "contingency_plan"],
                  "description": "Top-ranked hypothesis with execution guidance"
                },
                "decision_context": {
                  "type": "object",
                  "properties": {
                    "constraints_applied": {
                      "type": "array",
                      "items": { "type": "string" },
                      "description": "Constraints that influenced hypothesis generation"
                    },
                    "assumptions_made": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assumption": { "type": "string" },
                          "confidence": { "type": "number", "minimum": 0, "maximum": 1 },
                          "validation_needed": { "type": "boolean" }
                        },
                        "required": ["assumption", "confidence", "validation_needed"]
                      },
                      "description": "Assumptions made during hypothesis formation"
                    },
                    "information_gaps_remaining": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "gap": { "type": "string" },
                          "impact": {
                            "enum": ["blocking", "high", "medium", "low"],
                            "description": "Impact of this gap on execution"
                          },
                          "resolution_approach": { "type": "string" }
                        },
                        "required": ["gap", "impact", "resolution_approach"]
                      },
                      "description": "Gaps that remain after ORIENT phase"
                    },
                    "hypothesis_generation_method": {
                      "enum": ["decomposition", "analogy", "first_principles", "pattern_matching", "expert_knowledge", "hybrid"],
                      "description": "Method used to generate hypotheses"
                    }
                  },
                  "required": ["constraints_applied", "assumptions_made", "information_gaps_remaining", "hypothesis_generation_method"],
                  "description": "Context and assumptions for hypothesis decisions"
                }
              },
              "required": [
                "hypotheses_generated",
                "ranking",
                "recommended_approach",
                "decision_context"
              ]
            }
          },
          "required": ["status", "agent", "task_id", "operation_type", "summary", "confidence", "execution_timestamp", "agent_specific_output"],
          "additionalProperties": false
        },
        {
          "title": "Hypothesis Formation Failure",
          "properties": {
            "status": { "const": "FAILURE" },
            "agent": { "const": "hypothesis-former" },
            "task_id": { "type": "string" },
            "operation_type": { "const": "generate_hypotheses" },
            "summary": {
              "type": "string",
              "description": "Summary of why hypothesis formation failed"
            },
            "confidence": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Confidence level in failure diagnosis"
            },
            "execution_timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 UTC timestamp from orchestrator"
            },
            "failure_details": {
              "type": "object",
              "properties": {
                "failure_type": {
                  "enum": [
                    "insufficient_context",
                    "conflicting_constraints",
                    "no_viable_hypotheses",
                    "dcs_calculation_error",
                    "agent_availability_error",
                    "invalid_input",
                    "analysis_error"
                  ],
                  "description": "Primary type of failure"
                },
                "reasons": {
                  "type": "array",
                  "items": { "type": "string" },
                  "minItems": 1,
                  "description": "Specific reasons why hypothesis formation failed"
                },
                "context_quality_issues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "issue": { "type": "string" },
                      "severity": {
                        "enum": ["blocking", "high", "medium", "low"],
                        "description": "Severity of context quality issue"
                      },
                      "required_information": { "type": "string" }
                    },
                    "required": ["issue", "severity", "required_information"]
                  },
                  "description": "Context quality issues that prevented hypothesis generation"
                },
                "partial_hypotheses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string" },
                      "description": { "type": "string" },
                      "blocking_issue": { "type": "string" }
                    },
                    "required": ["name", "blocking_issue"]
                  },
                  "description": "Partial hypotheses generated before failure"
                },
                "recovery_suggestions": {
                  "type": "array",
                  "items": { "type": "string" },
                  "minItems": 1,
                  "description": "Suggested approaches to resolve the failure"
                }
              },
              "required": ["failure_type", "reasons", "recovery_suggestions"]
            }
          },
          "required": ["status", "agent", "task_id", "operation_type", "summary", "confidence", "execution_timestamp", "failure_details"],
          "additionalProperties": false
        }
      ]
    }
  },
  "required": ["input", "output"]
}
