{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "agent-architect.schema.json",
  "version": "2.3.0",
  "title": "Agent Architect Unified Schema",
  "description": "Consolidated input/output schema for agent lifecycle management operations with two-state model, including interactive agent creation workflow support",
  "type": "object",
  "properties": {
    "input": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string",
          "description": "Unique identifier for the task"
        },
        "operation_type": {
          "type": "string",
          "enum": ["create_agent", "evaluate_agent", "implement_feedback", "update_agent", "create_design_guide", "validate_workflow", "update_maturity", "analyze_agent_idea", "generate_agent_definition"],
          "description": "Type of agent lifecycle operation to perform"
        },
        "description": {
          "type": "string",
          "description": "Detailed description of what needs to be accomplished"
        },
        "agent_requirements": {
          "type": "object",
          "description": "Requirements for agent creation (create_agent operation)",
          "properties": {
            "name": { "type": "string", "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$" },
            "purpose": { "type": "string" },
            "model_preference": { "enum": ["sonnet", "opus", "haiku", "inherit"] },
            "required_tools": { "type": "array", "items": { "type": "string" } },
            "scope_constraints": { "type": "array", "items": { "type": "string" } },
            "success_criteria": { "type": "array", "items": { "type": "string" } },
            "initial_maturity": { "enum": ["v0.1", "v0.5", "v1.0"], "description": "Initial maturity assessment", "default": "v0.1" },
            "workflow_integration": { "type": "boolean", "description": "Whether to update orchestrator workflow", "default": true }
          }
        },
        "evaluation_target": {
          "type": "object",
          "description": "Target agent for evaluation (evaluate_agent operation)",
          "properties": {
            "agent_file_path": { "type": "string" },
            "test_fixtures": { "type": "array", "items": { "type": "string" } },
            "external_validation_data": { "type": "array", "items": { "type": "string" } }
          }
        },
        "feedback_request": {
          "type": "object",
          "description": "Simple feedback implementation request (implement_feedback operation)",
          "properties": {
            "target_agent": { "type": "string", "description": "Name of the agent to apply feedback to" },
            "feedback_text": { "type": "string", "description": "Clear description of what needs to be changed" },
            "priority": { "enum": ["low", "medium", "high"], "default": "medium" },
            "change_scope": { "enum": ["minor", "moderate", "major"], "description": "Expected scope of changes" }
          },
          "required": ["target_agent", "feedback_text"]
        },
        "update_request": {
          "type": "object",
          "description": "Agent update specifications (update_agent operation)",
          "properties": {
            "agent_name": { "type": "string" },
            "consolidated_feedback": { "type": "object", "additionalProperties": true },
            "version_strategy": { "enum": ["patch", "minor", "major", "auto"] },
            "change_priorities": { "type": "array", "items": { "type": "string" } }
          }
        },
        "design_guide_request": {
          "type": "object",
          "description": "Design guide creation specifications (create_design_guide operation)",
          "properties": {
            "guide_topic": { "type": "string" },
            "scope": { "type": "string" },
            "practices_observed": { "type": "array", "items": { "type": "string" } },
            "target_audience": { "enum": ["agent_developers", "orchestrator", "general"] },
            "priority_level": { "enum": ["high", "medium", "low"] }
          }
        },
        "workflow_validation": {
          "type": "object",
          "description": "Workflow validation specifications (validate_workflow operation)",
          "properties": {
            "validate_agent_legend": { "type": "boolean", "default": true },
            "validate_maturity_calculation": { "type": "boolean", "default": true },
            "agent_changes": { "type": "array", "items": { "type": "string" }, "description": "List of agents that have changed" }
          }
        },
        "maturity_update": {
          "type": "object",
          "description": "Maturity update specifications (update_maturity operation)",
          "properties": {
            "agent_name": { "type": "string" },
            "new_maturity": { "type": "string", "pattern": "^v\\d+\\.\\d+$" },
            "maturity_rationale": { "type": "string" },
            "recalculate_workflow": { "type": "boolean", "default": true }
          }
        },
        "agent_idea_analysis": {
          "type": "object",
          "description": "User idea analysis request (analyze_agent_idea operation)",
          "properties": {
            "user_idea_text": {
              "type": "string",
              "description": "User's 2-3 sentence description of agent idea",
              "minLength": 10
            },
            "analysis_depth": {
              "type": "string",
              "enum": ["quick", "comprehensive"],
              "default": "comprehensive",
              "description": "Depth of analysis to perform"
            }
          },
          "required": ["user_idea_text"]
        },
        "definition_generation": {
          "type": "object",
          "description": "Agent definition file generation request",
          "properties": {
            "output_path": {
              "type": "string",
              "description": "Absolute path where definition file should be written"
            },
            "refined_requirements": {
              "type": "object",
              "description": "Refined requirements from Phase 3 Q&A",
              "properties": {
                "name": { "type": "string" },
                "domain": { "type": "string" },
                "type": {
                  "type": "string",
                  "enum": ["Creator", "Reviewer", "Enhancer", "Runner", "Analyzer", "Planner", "Manager"]
                },
                "purpose": { "type": "string" },
                "capabilities": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "inputs": {
                  "type": "array",
                  "items": { "type": "object" }
                },
                "success_output": { "type": "string" },
                "failure_output": { "type": "string" },
                "knowledge_areas": {
                  "type": "array",
                  "items": { "type": "object" }
                },
                "tools": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "integration_points": { "type": "object" },
                "original_idea": {
                  "type": "string",
                  "description": "User's original idea text for reference"
                }
              },
              "required": ["name", "domain", "type", "purpose", "capabilities"]
            }
          },
          "required": ["output_path", "refined_requirements"]
        },
        "urls": {
          "type": "array",
          "items": { "type": "string", "format": "uri" },
          "description": "Specific research URLs to consult"
        },
        "execution_timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 UTC timestamp from orchestrator"
        }
      },
      "required": ["task_id", "operation_type", "description", "execution_timestamp"],
      "additionalProperties": false
    },
    "output": {
      "type": "object",
      "oneOf": [
        {
          "title": "Agent Architect Success",
          "properties": {
            "status": { "const": "SUCCESS" },
            "agent": { "const": "agent-architect" },
            "task_id": { "type": "string" },
            "operation_type": { "enum": ["create_agent", "evaluate_agent", "implement_feedback", "update_agent", "create_design_guide", "validate_workflow", "update_maturity", "analyze_agent_idea", "generate_agent_definition"] },
            "summary": { "type": "string", "description": "1-3 sentence executive summary of work completed" },
            "validation_checklist": {
              "type": "object",
              "properties": {
                "checks_performed": {
                  "type": "array",
                  "items": { "type": "string" },
                  "description": "List of agent lifecycle validation checks performed"
                },
                "all_checks_passed": {
                  "const": true,
                  "description": "Must be true for SUCCESS status"
                },
                "check_details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "check_name": { "type": "string" },
                      "status": { "const": "passed" },
                      "evidence": { "type": "string" },
                      "validation_method": { "enum": ["agent_creation", "evaluation_matrix", "feedback_analysis", "workflow_validation", "idea_analysis", "definition_generation"] }
                    },
                    "required": ["check_name", "status", "evidence", "validation_method"]
                  }
                }
              },
              "required": ["checks_performed", "all_checks_passed", "check_details"]
            },
            "report_path": { "type": "string", "description": "Relative path to detailed report file in .claude/docs/reports/" },
            "operation_result": {
              "type": "object",
              "oneOf": [
                {
                  "title": "Agent Creation Result",
                  "properties": {
                    "operation": { "const": "create_agent" },
                    "agent_name": { "type": "string" },
                    "specification": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "description": { "type": "string", "maxLength": 200 },
                        "model": { "enum": ["sonnet", "opus", "haiku", "inherit"] },
                        "color": { "type": "string" },
                        "tools": { "type": "array", "items": { "type": "string" } },
                        "core_responsibilities": { "type": "array", "items": { "type": "string" } },
                        "scope_boundaries": { "type": "array", "items": { "type": "string" } },
                        "success_criteria": { "type": "array", "items": { "type": "string" } }
                      },
                      "required": ["name", "description", "model", "tools", "core_responsibilities", "scope_boundaries"]
                    },
                    "research_summary": {
                      "type": "object",
                      "properties": {
                        "best_practices": { "type": "string" },
                        "design_patterns": { "type": "string" },
                        "anti_patterns": { "type": "string" },
                        "confidence_score": { "type": "number", "minimum": 0, "maximum": 1 }
                      }
                    },
                    "template_compliance": {
                      "type": "object",
                      "properties": {
                        "structure_valid": { "type": "boolean" },
                        "required_fields": { "type": "boolean" },
                        "format_compliant": { "type": "boolean" }
                      }
                    }
                  },
                  "required": ["operation", "agent_name", "specification"]
                },
                {
                  "title": "Agent Evaluation Result",
                  "properties": {
                    "operation": { "const": "evaluate_agent" },
                    "agent_name": { "type": "string" },
                    "evaluation": {
                      "type": "object",
                      "properties": {
                        "overall_score": { "type": "number", "minimum": 0, "maximum": 5 },
                        "weighted_score": { "type": "number", "minimum": 0, "maximum": 5 },
                        "grade": { "enum": ["A", "B", "C", "D", "F"] },
                        "criteria_scores": {
                          "type": "object",
                          "properties": {
                            "correctness": {
                              "type": "object",
                              "properties": {
                                "score": { "type": "number", "minimum": 0, "maximum": 5 },
                                "weight": { "const": 0.25 },
                                "evidence": { "type": "string" },
                                "improvements": { "type": "array", "items": { "type": "string" } }
                              },
                              "required": ["score", "weight", "evidence"]
                            }
                          },
                          "required": ["correctness"]
                        }
                      },
                      "required": ["overall_score", "weighted_score", "grade", "criteria_scores"]
                    },
                    "recommendations": {
                      "type": "object",
                      "properties": {
                        "priority_improvements": { "type": "array", "items": { "type": "string" } },
                        "suggested_changes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "category": { "type": "string" },
                              "change": { "type": "string" },
                              "impact": { "enum": ["low", "medium", "high"] }
                            },
                            "required": ["category", "change", "impact"]
                          }
                        },
                        "version_increment": { "enum": ["patch", "minor", "major"] }
                      },
                      "required": ["priority_improvements", "suggested_changes", "version_increment"]
                    }
                  },
                  "required": ["operation", "agent_name", "evaluation", "recommendations"]
                },
                {
                  "title": "Feedback Implementation Result",
                  "properties": {
                    "operation": { "const": "implement_feedback" },
                    "agent_name": { "type": "string" },
                    "feedback_analysis": {
                      "type": "object",
                      "properties": {
                        "original_feedback": { "type": "string" },
                        "analysis_summary": { "type": "string" },
                        "change_category": { "enum": ["clarification", "enhancement", "bug_fix", "scope_adjustment", "tool_modification", "architectural_change"] },
                        "impact_assessment": { "enum": ["minimal", "moderate", "significant"] }
                      },
                      "required": ["original_feedback", "analysis_summary", "change_category", "impact_assessment"]
                    },
                    "changes_made": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "section": { "type": "string", "description": "Which part of the agent was modified" },
                          "change_description": { "type": "string", "description": "What was changed" },
                          "rationale": { "type": "string", "description": "Why this change addresses the feedback" },
                          "diff_preview": { "type": "string", "description": "Brief preview of the change" }
                        },
                        "required": ["section", "change_description", "rationale"]
                      }
                    },
                    "implementation_notes": {
                      "type": "object",
                      "properties": {
                        "version_increment": { "enum": ["patch", "minor", "major"] },
                        "semantic_reasoning": { "type": "string" },
                        "testing_recommendations": { "type": "array", "items": { "type": "string" } },
                        "additional_considerations": { "type": "array", "items": { "type": "string" } }
                      },
                      "required": ["version_increment", "semantic_reasoning"]
                    }
                  },
                  "required": ["operation", "agent_name", "feedback_analysis", "changes_made", "implementation_notes"]
                },
                {
                  "title": "Agent Idea Analysis Result",
                  "properties": {
                    "operation": { "const": "analyze_agent_idea" },
                    "agent_idea_proposal": {
                      "type": "object",
                      "description": "Structured 10-section proposal with confidence scoring",
                      "properties": {
                        "name_options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string" },
                              "confidence": { "type": "number", "minimum": 0.0, "maximum": 1.0 },
                              "rationale": { "type": "string" }
                            },
                            "required": ["name", "confidence", "rationale"]
                          },
                          "minItems": 2,
                          "maxItems": 3
                        },
                        "domain_scope": {
                          "type": "object",
                          "properties": {
                            "recommendation": { "type": "string" },
                            "confidence": { "type": "number" },
                            "rationale": { "type": "string" },
                            "read_access": { "type": "array", "items": { "type": "string" } },
                            "write_access": { "type": "array", "items": { "type": "string" } }
                          },
                          "required": ["recommendation", "confidence", "rationale"]
                        },
                        "agent_type": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": ["Creator", "Reviewer", "Enhancer", "Runner", "Analyzer", "Planner", "Manager"]
                            },
                            "confidence": { "type": "number" },
                            "rationale": { "type": "string" }
                          },
                          "required": ["type", "confidence", "rationale"]
                        },
                        "purpose_statement": {
                          "type": "string",
                          "description": "1-2 sentence purpose with trigger conditions"
                        },
                        "capabilities": {
                          "type": "array",
                          "items": { "type": "string" },
                          "minItems": 4,
                          "maxItems": 6,
                          "description": "Actionable capability descriptions"
                        },
                        "expected_inputs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "field_name": { "type": "string" },
                              "description": { "type": "string" },
                              "data_type": { "type": "string" },
                              "validation_rules": { "type": "string" }
                            },
                            "required": ["field_name", "description", "data_type"]
                          }
                        },
                        "expected_outputs": {
                          "type": "object",
                          "properties": {
                            "success_description": { "type": "string" },
                            "failure_description": { "type": "string" }
                          },
                          "required": ["success_description", "failure_description"]
                        },
                        "knowledge_areas": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "topic": { "type": "string" },
                              "confidence": { "type": "number" },
                              "priority": { "type": "string", "enum": ["critical", "important", "nice-to-have"] },
                              "rationale": { "type": "string" }
                            },
                            "required": ["topic", "confidence", "priority"]
                          }
                        },
                        "tool_recommendations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tool": { "type": "string" },
                              "confidence": { "type": "number" },
                              "rationale": { "type": "string" }
                            },
                            "required": ["tool", "confidence", "rationale"]
                          }
                        },
                        "integration_points": {
                          "type": "object",
                          "properties": {
                            "coordinates_with": {
                              "type": "array",
                              "items": { "type": "string" },
                              "description": "Other agents this will coordinate with"
                            },
                            "trigger_conditions": {
                              "type": "array",
                              "items": { "type": "string" },
                              "description": "When to invoke this agent"
                            },
                            "dependencies": {
                              "type": "array",
                              "items": { "type": "string" },
                              "description": "Required tools, services, or resources"
                            }
                          }
                        }
                      },
                      "required": [
                        "name_options",
                        "domain_scope",
                        "agent_type",
                        "purpose_statement",
                        "capabilities",
                        "expected_inputs",
                        "expected_outputs",
                        "knowledge_areas",
                        "tool_recommendations",
                        "integration_points"
                      ]
                    }
                  },
                  "required": ["operation", "agent_idea_proposal"]
                },
                {
                  "title": "Agent Definition Generation Result",
                  "properties": {
                    "operation": { "const": "generate_agent_definition" },
                    "definition_file_path": {
                      "type": "string",
                      "description": "Absolute path to created definition file"
                    },
                    "file_preview": {
                      "type": "string",
                      "description": "First 30 lines of generated file"
                    },
                    "total_lines": {
                      "type": "number",
                      "description": "Total line count of generated file"
                    },
                    "template_compliance": {
                      "type": "object",
                      "properties": {
                        "follows_structure": {
                          "type": "boolean",
                          "description": "File follows agent-definition-input.template.md structure"
                        },
                        "all_sections_filled": {
                          "type": "boolean",
                          "description": "All 14 required sections are populated"
                        },
                        "ready_for_creation": {
                          "type": "boolean",
                          "description": "File is ready for /create-agent command"
                        }
                      },
                      "required": ["follows_structure", "all_sections_filled", "ready_for_creation"]
                    }
                  },
                  "required": ["operation", "definition_file_path", "file_preview", "total_lines", "template_compliance"]
                },
                {
                  "title": "Generic Operation Result",
                  "properties": {
                    "operation": { "enum": ["update_agent", "create_design_guide", "validate_workflow", "update_maturity"] },
                    "operation_details": {
                      "type": "object",
                      "description": "Operation-specific results and evidence"
                    }
                  },
                  "required": ["operation", "operation_details"]
                }
              ]
            },
            "changes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "path": { "type": "string" },
                  "action": { "enum": ["create", "update", "delete"] }
                },
                "required": ["path", "action"]
              }
            },
            "recommendations": { "type": "array", "items": { "type": "string" } },
            "validation_proposal": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Specific validation steps the orchestrator should execute to verify the changes"
            },
            "sources": { "type": "array", "items": { "type": "string", "format": "uri" } },
            "confidence": { "type": "number", "minimum": 0, "maximum": 1, "description": "Confidence level in the completed operation" },
            "severity": { "enum": ["Critical", "Major", "Minor"], "description": "Severity level of the operation impact" },
            "execution_timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 UTC timestamp from orchestrator"
            }
          },
          "required": ["status", "agent", "task_id", "operation_type", "summary", "validation_checklist", "operation_result", "changes", "validation_proposal", "sources", "confidence", "severity", "execution_timestamp"],
          "additionalProperties": false
        },
        {
          "title": "Agent Architect Failure",
          "properties": {
            "status": { "const": "FAILURE" },
            "agent": { "const": "agent-architect" },
            "task_id": { "type": "string" },
            "operation_type": { "enum": ["create_agent", "evaluate_agent", "implement_feedback", "update_agent", "create_design_guide", "validate_workflow", "update_maturity", "analyze_agent_idea", "generate_agent_definition"] },
            "summary": { "type": "string", "description": "Summary of why agent lifecycle operation failed" },
            "validation_checklist": {
              "type": "object",
              "properties": {
                "checks_performed": {
                  "type": "array",
                  "items": { "type": "string" },
                  "description": "List of validation checks attempted"
                },
                "all_checks_passed": {
                  "const": false,
                  "description": "Must be false for FAILURE status"
                },
                "failed_checks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "check_name": { "type": "string" },
                      "status": { "const": "failed" },
                      "reason": { "type": "string" },
                      "evidence": { "type": "string" }
                    },
                    "required": ["check_name", "status", "reason"]
                  },
                  "minItems": 1
                },
                "passed_checks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "check_name": { "type": "string" },
                      "status": { "const": "passed" },
                      "evidence": { "type": "string" }
                    },
                    "required": ["check_name", "status", "evidence"]
                  }
                }
              },
              "required": ["checks_performed", "all_checks_passed", "failed_checks"]
            },
            "failure_details": {
              "type": "object",
              "properties": {
                "failure_type": {
                  "enum": ["missing_information", "validation_error", "execution_error", "resource_error", "agent_creation_error", "evaluation_error", "feedback_error", "vague_user_idea", "idea_analysis_error", "definition_generation_error", "file_write_error"],
                  "description": "Primary type of failure"
                },
                "reasons": {
                  "type": "array",
                  "items": { "type": "string" },
                  "description": "Specific reasons why the agent lifecycle task cannot be completed"
                },
                "missing": {
                  "type": "array",
                  "items": { "type": "string" },
                  "description": "Specific fields, artifacts, or information needed"
                },
                "missing_information": {
                  "type": "array",
                  "items": { "type": "string" },
                  "description": "Specific questions for user to clarify vague ideas (e.g., 'What problem does agent solve?', 'Which tools are needed?')"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error_code": { "type": "string" },
                      "message": { "type": "string" },
                      "hint": { "type": "string" },
                      "context": { "type": "object" }
                    },
                    "required": ["error_code", "message", "hint"]
                  }
                },
                "proposed_next_steps": {
                  "type": "array",
                  "items": { "type": "string" },
                  "description": "Actionable next steps to resolve the blockage"
                },
                "partial_results": {
                  "type": "object",
                  "description": "Any agent work completed before failure"
                }
              },
              "required": ["failure_type", "reasons", "proposed_next_steps"]
            },
            "sources": { "type": "array", "items": { "type": "string", "format": "uri" }, "description": "Sources researched before failure" },
            "confidence": { "type": "number", "minimum": 0, "maximum": 1, "description": "Confidence level in the identified blocking issues" },
            "severity": { "enum": ["Critical", "Major", "Minor"], "description": "Severity level of the blocking issues" },
            "execution_timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 UTC timestamp from orchestrator"
            }
          },
          "required": ["status", "agent", "task_id", "operation_type", "summary", "validation_checklist", "failure_details", "confidence", "severity", "execution_timestamp"],
          "additionalProperties": false
        }
      ]
    }
  },
  "required": ["input", "output"]
}
